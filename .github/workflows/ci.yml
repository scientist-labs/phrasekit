name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test on ${{ matrix.os }} - Ruby ${{ matrix.ruby }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        ruby:
          - '3.0'
          - '3.1'
          - '3.2'
          - '3.3'
        include:
          - os: macos-latest
            ruby: '3.2'
            platform: arm64-darwin
          - os: macos-latest
            ruby: '3.2'
            platform: x86_64-darwin
          - os: ubuntu-latest
            ruby: '3.2'
            platform: x86_64-linux

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install dependencies
        run: bundle install

      - name: Build native extension
        run: bundle exec rake compile

      - name: Run tests
        run: bundle exec rspec

  lint:
    name: Lint Rust code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Run rustfmt
        run: cargo fmt --check

      - name: Run clippy
        run: cargo clippy -- -D warnings

  build-gem:
    name: Build gem for ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: x86_64-linux
            rust_target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            platform: x86_64-linux-musl
            rust_target: x86_64-unknown-linux-musl
          - os: macos-latest
            platform: x86_64-darwin
            rust_target: x86_64-apple-darwin
          - os: macos-latest
            platform: arm64-darwin
            rust_target: aarch64-apple-darwin

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rust_target }}

      - name: Install musl tools (Linux only)
        if: matrix.platform == 'x86_64-linux-musl'
        run: sudo apt-get update && sudo apt-get install -y musl-tools

      - name: Build gem
        run: |
          gem build phrasekit.gemspec
          mkdir -p pkg
          mv *.gem pkg/

      - name: Upload gem
        uses: actions/upload-artifact@v4
        with:
          name: gem-${{ matrix.platform }}
          path: pkg/*.gem
          retention-days: 7